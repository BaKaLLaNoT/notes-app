{"version":3,"sources":["services/notes.js","hooks/useNotes.js","components/NoteDetail.js","services/login.js","hooks/useUser.js","components/Note.js","components/Togglable.js","components/NoteForm.js","Notes.js","hooks/useField.js","components/LoginForm.js","components/Notification.js","Login.js","App.js","index.js"],"names":["baseUrl","token","axios","get","then","response","data","newObject","config","headers","Authorization","post","id","put","newToken","useNotes","useState","notes","setNotes","useEffect","noteService","initialNotes","addNote","noteObject","returnedNote","concat","toggleImportanceOf","note","find","n","changedNote","important","map","NoteDetail","noteId","useParams","content","user","name","login","credentials","a","useUser","setUser","loggedUserJSON","window","localStorage","getItem","JSON","parse","username","password","loginService","console","log","setItem","stringify","logout","removeItem","Note","toggleImportance","label","className","to","onClick","Togglable","forwardRef","ref","children","buttonLabel","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","displayName","NoteForm","handleLogout","newNote","setNewNote","togglableRef","useRef","onSubmit","event","preventDefault","current","placeholder","value","onChange","target","type","Notes","showAll","setShowAll","errorMessage","setErrorMessage","notesToShow","filter","i","catch","setTimeout","useField","setValue","LoginForm","handleSubmit","Notification","message","Login","navigate","useNavigate","setUsername","setPassword","e","handleUsernameChange","handlePasswordChange","Home","Helmet","Users","App","inlineStyles","padding","fallback","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d575d6aa.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n  token = `Bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const request = axios.post(baseUrl, newObject, config)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject, config)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, create, update, setToken }\r\n","import { useEffect, useState } from 'react'\r\nimport noteService from '../services/notes'\r\n\r\nexport const useNotes = () => {\r\n  const [notes, setNotes] = useState([])\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then((initialNotes) => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  const addNote = (noteObject) => {\r\n    noteService.create(noteObject).then((returnedNote) => {\r\n      setNotes(notes.concat(returnedNote))\r\n    })\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find((n) => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then((returnedNote) => {\r\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\r\n      })\r\n  }\r\n\r\n  return { addNote, toggleImportanceOf, notes }\r\n}\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useNotes } from '../hooks/useNotes'\r\n\r\nexport const NoteDetail = () => {\r\n  const { noteId } = useParams()\r\n  const { notes } = useNotes()\r\n\r\n  const note = notes.find(note => note.id === noteId)\r\n  if (!note) { return null }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{note.content}</h2>\r\n      <div>{note.user?.name}</div>\r\n      <div>\r\n        <strong>{note.important ? 'important' : ''}</strong>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const { data } = await axios.post(baseUrl, credentials)\r\n  return data\r\n}\r\n\r\nexport default { login }\r\n","import { useEffect, useState } from 'react'\r\nimport noteService from '../services/notes'\r\nimport loginService from '../services/login'\r\n\r\nexport const useUser = () => {\r\n  const [user, setUser] = useState(null)\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      noteService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const login = async ({ username, password }) => {\r\n    const user = await loginService.login({ username, password })\r\n    console.log(user)\r\n    window.localStorage.setItem('loggedNoteAppUser', JSON.stringify(user))\r\n    noteService.setToken(user.token)\r\n    setUser(user)\r\n  }\r\n\r\n  const logout = () => {\r\n    setUser(null)\r\n    noteService.setToken(user.token)\r\n    window.localStorage.removeItem('loggedNoteAppUser')\r\n  }\r\n\r\n  return { user, login, logout }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important'\r\n    : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      <Link to={`/notes/${note.id}`}>{note.content}</Link>\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import React, { forwardRef, useImperativeHandle, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = forwardRef(({ children, buttonLabel }, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => setVisible(!visible)\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return { toggleVisibility }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {children}\r\n        <button onClick={toggleVisibility}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable\r\n","import React, { useRef, useState } from 'react'\r\nimport Togglable from './Togglable'\r\n\r\nexport default function NoteForm ({ addNote, handleLogout }) {\r\n  const [newNote, setNewNote] = useState('')\r\n  const togglableRef = useRef()\r\n\r\n  const handleChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      important: false\r\n    }\r\n    addNote(noteObject)\r\n    setNewNote('')\r\n    togglableRef.current.toggleVisibility()\r\n  }\r\n\r\n  return (\r\n    <Togglable buttonLabel='New Note' ref={togglableRef}>\r\n      <h3>Create a new note</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          placeholder='Write your note content'\r\n          value={newNote}\r\n          onChange={handleChange}\r\n        />\r\n        <button type='submit'>save</button>\r\n      </form>\r\n      <div>\r\n        <button onClick={handleLogout}>Logout</button>\r\n      </div>\r\n    </Togglable>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Note from './components/Note'\r\nimport NoteForm from './components/NoteForm'\r\nimport { useNotes } from './hooks/useNotes'\r\nimport { useUser } from './hooks/useUser'\r\n\r\nconst Notes = () => {\r\n  const { notes, addNote, toggleImportanceOf } = useNotes()\r\n  const { user, logout } = useUser()\r\n\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const toggleImportanceOfNote = (id) => {\r\n    toggleImportanceOf(id)\r\n      .catch(() => {\r\n        setErrorMessage(\r\n          'Note was already removed from server'\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      })\r\n  }\r\n\r\n  if (errorMessage) {\r\n    return <p>{errorMessage}</p>\r\n  }\r\n\r\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important)\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      {user ? <NoteForm addNote={addNote} handleLogout={logout} /> : null}\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note, i) => (\r\n          <Note\r\n            key={i}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOfNote(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notes\r\n","import { useState } from 'react'\r\n\r\nexport const useField = ({ type }) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value)\r\n  }\r\n  return { type, value, onChange }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useField } from '../hooks/useField'\r\n\r\nexport default function LoginForm ({\r\n  handleSubmit\r\n}) {\r\n  const username = useField({ type: 'text' })\r\n  const password = useField({ type: 'password' })\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <input\r\n          {...username}\r\n          name='Username'\r\n          placeholder='Username'\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n          {...password}\r\n          name='Password'\r\n          placeholder='Password'\r\n        />\r\n      </div>\r\n      <button id='form-login-button'>Login</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  username: PropTypes.string\r\n}\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className='error'>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState } from 'react'\r\nimport LoginForm from './components/LoginForm'\r\nimport Notification from './components/Notification'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useUser } from './hooks/useUser'\r\n\r\nexport default function Login () {\r\n  const navigate = useNavigate()\r\n  const { user, login } = useUser()\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      login({ username, password })\r\n      setUsername('')\r\n      setPassword('')\r\n      navigate('/notes')\r\n    } catch (e) {\r\n      setErrorMessage('Wrong credentials!')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  if (errorMessage) {\r\n    return <p>{errorMessage}</p>\r\n  }\r\n\r\n  if (user) {\r\n    return <p>User is logged</p>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <Notification message={errorMessage} />\r\n      <LoginForm\r\n        username={username}\r\n        password={password}\r\n        handleUsernameChange={({ target }) => setUsername(target.value)}\r\n        handlePasswordChange={({ target }) => setPassword(target.value)}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { Suspense } from 'react'\r\nimport { Routes, Route, Link, Navigate } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\nimport { NoteDetail } from './components/NoteDetail'\r\nimport { useUser } from './hooks/useUser'\r\nimport Notes from './Notes'\r\nimport Login from './Login'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Home | Notes App</title>\r\n      </Helmet>\r\n      <h1>Home Page</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Users = () => <h1>Users</h1>\r\n\r\nconst App = () => {\r\n  const { user } = useUser()\r\n\r\n  const inlineStyles = {\r\n    padding: 5\r\n  }\r\n  return (\r\n    <Suspense fallback={<span>Loading component..</span>}>\r\n      <header>\r\n        <Link to='/' style={inlineStyles}>Home</Link>\r\n        <Link to='/notes' style={inlineStyles}>Notes</Link>\r\n        <Link to='/users' style={inlineStyles}>Users</Link>\r\n        {\r\n          user\r\n            ? <em>Logged as {user.name}</em>\r\n            : (\r\n              <Link to='/login' style={inlineStyles}>Login</Link>\r\n              )\r\n        }\r\n      </header>\r\n      <Routes>\r\n        <Route path='/login' element={user ? <Navigate to='/' /> : <Login />} />\r\n        <Route path='/notes' element={<Notes />} />\r\n        <Route path='/notes/:noteId' element={<NoteDetail />} />\r\n        <Route path='/users' element={user ? <Users /> : <Navigate to='/login' />} />\r\n        <Route path='/' element={<Home />} />\r\n        <Route element={<h1>Not found</h1>} />\r\n      </Routes>\r\n    </Suspense>\r\n\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root'))\r\n"],"sourceRoot":""}